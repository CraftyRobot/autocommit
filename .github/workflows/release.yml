name: Release

on:
  push:
    tags:
      - "v*"

jobs:
  build-and-release:
    if: |
      !contains(github.event.head_commit.message, 'Inject version')
    name: Build and Publish Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Set version from tag
        run: echo "VERSION=${GITHUB_REF##*/}" >> $GITHUB_ENV

      # 1️⃣ Inject and commit version bump
      - name: Commit version bump to autocommit.sh and update tag
        env:
          GITHUB_TOKEN: ${{ secrets.TAP_GITHUB_TOKEN }}
        run: |
          git config --global user.name "autocommit bot"
          git config --global user.email "bot@autocommit.local"

          git clone https://x-access-token:${GITHUB_TOKEN}@github.com/${{ github.repository }} source-repo
          cd source-repo

          sed -i "s/^VERSION=\".*\"/VERSION=\"${VERSION#v}\"/" autocommit.sh
          git add autocommit.sh
          git commit -m "Inject version ${VERSION#v} into autocommit.sh"
          git push origin HEAD

          git tag -f "${VERSION}"
          git push --force origin "${VERSION}"

      # 2️⃣ Clone again to work with the updated version
      - name: Checkout updated tag commit
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
          ref: ${{ env.VERSION }}

      - name: Make script executable
        run: chmod +x autocommit.sh

      - name: Download GitHub tag tarball and calculate SHA
        run: |
          curl -L -o autocommit-${VERSION}.tar.gz \
            https://github.com/${{ github.repository }}/archive/refs/tags/${VERSION}.tar.gz

          sha256sum autocommit-${VERSION}.tar.gz > autocommit-${VERSION}.tar.gz.sha256

      - name: Build .deb package
        run: |
          mkdir -p pkg/usr/local/bin
          cp autocommit.sh pkg/usr/local/bin/autocommit
          chmod +x pkg/usr/local/bin/autocommit
          mkdir -p pkg/DEBIAN
          echo "Package: autocommit" > pkg/DEBIAN/control
          echo "Version: ${VERSION#v}" >> pkg/DEBIAN/control
          echo "Section: utils" >> pkg/DEBIAN/control
          echo "Priority: optional" >> pkg/DEBIAN/control
          echo "Architecture: all" >> pkg/DEBIAN/control
          echo "Maintainer: Msonc" >> pkg/DEBIAN/control
          echo "Description: A tiny Git auto-committer script in Bash" >> pkg/DEBIAN/control
          echo "Depends: git" >> pkg/DEBIAN/control
          dpkg-deb --build pkg autocommit_${VERSION#v}_all.deb

      - name: Generate Homebrew formula
        run: |
          SHA=$(cut -d ' ' -f1 autocommit-${VERSION}.tar.gz.sha256)
          echo "class Autocommit < Formula" > autocommit.rb
          echo "  desc \"Tiny Git auto-committer script\"" >> autocommit.rb
          echo "  homepage \"https://github.com/${{ github.repository }}\"" >> autocommit.rb
          echo "  url \"https://github.com/${{ github.repository }}/archive/refs/tags/${VERSION}.tar.gz\"" >> autocommit.rb
          echo "  sha256 \"$SHA\"" >> autocommit.rb
          echo "  license \"MIT\"" >> autocommit.rb
          echo "" >> autocommit.rb
          echo "  def install" >> autocommit.rb
          echo "    chmod 0755, \"autocommit.sh\"" >> autocommit.rb
          echo "    bin.install \"autocommit.sh\" => \"autocommit\"" >> autocommit.rb
          echo "  end" >> autocommit.rb
          echo "end" >> autocommit.rb

      - name: Prepare version without `v`
        run: echo "VERSION_PLAIN=${VERSION#v}" >> $GITHUB_ENV

      - name: Upload release assets
        uses: softprops/action-gh-release@v1
        with:
          name: "Auto Committer ${{ env.VERSION }}"
          tag_name: ${{ env.VERSION }}
          files: |
            autocommit-${{ env.VERSION }}.tar.gz
            autocommit-${{ env.VERSION }}.tar.gz.sha256
            autocommit_${{ env.VERSION_PLAIN }}_all.deb
            autocommit.rb

      - name: Push updated formula to tap repo
        run: |
          git config --global user.name "autocommit bot"
          git config --global user.email "bot@autocommit.local"

          git clone https://x-access-token:${{ secrets.TAP_GITHUB_TOKEN }}@github.com/CraftyRobot/homebrew-autocommit.git tap
          mkdir -p tap/Formula
          cp autocommit.rb tap/Formula/autocommit.rb
          cd tap
          git add Formula/autocommit.rb
          git commit -m "Update autocommit formula to $VERSION"
          git push origin main
